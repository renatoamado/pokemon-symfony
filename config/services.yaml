# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:    

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\CardProviderInterface:
        class: App\Service\CardProvider

    App\Service\NonceGeneratorInterface:
        class: App\Service\NonceGenerator

    Pokemon\Pokemon:
        class: Pokemon\Pokemon
        calls:
            - method: 'Options'
              arguments:
                  - {verify: true, timeout: 20, connection_timeout: 5}
            - method: 'ApiKey'
              arguments:
                  - '%env(API_KEY)%'

    Symfony\Component\Cache\Adapter\FilesystemAdapter:
        arguments:
            $namespace: 'app_cache'

    App\Service\CacheService:
        arguments:
            $cache: '@Symfony\Component\Cache\Adapter\FilesystemAdapter'

    App\Transformer\TransformerInterface:
        class: App\Transformer\Transformer

    App\Service\PokemonService:
        arguments:
            $cardProvider: '@App\Service\CardProviderInterface'
            $cacheService: '@App\Service\CacheService'
            $transformer: '@App\Transformer\TransformerInterface'
